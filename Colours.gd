extends Node

# Palette:
var comment = """
const SHAPE_COLOURS.TURQUOISE = '54a89b'
const SHAPE_COLOURS.DEEP_RED = '802325'
const PINK = 'f1bcb5'
const BLUE = '05409c'
const GOLD = 'e9c97c'
const ORANGE = 'd07b25'
const PALETTE = [TURQUOISE, DEEP_RED, PINK, BLUE, GOLD, ORANGE]

const BLACK = '28282d'
const BG_COLOUR = 'e8dac2'

const ANSWER_RED = 'ce292f'
"""
enum SHAPE_COLOURS {
	TURQUOISE,
	DEEP_RED,
	PINK,
	BLUE,
	GOLD,
	ORANGE,
	BLACK,
	BG_COLOUR,
	ANSWER_RED
}

func asdf(x):
	print('did x ' + str(x))

func to_hex(enum_colour: int):
	match enum_colour:
		SHAPE_COLOURS.TURQUOISE:
			return '54a89b'
		SHAPE_COLOURS.DEEP_RED:
			return '802325'
		SHAPE_COLOURS.PINK:
			return 'f1bcb5'
		SHAPE_COLOURS.BLUE:
			return '05409c'
		SHAPE_COLOURS.GOLD:
			return 'e9c97c'
		SHAPE_COLOURS.ORANGE:
			return 'd07b25'
		SHAPE_COLOURS.BLACK:
			return '28282d'
		SHAPE_COLOURS.BG_COLOUR:
			return 'e8dac2'
		SHAPE_COLOURS.ANSWER_RED:
			return 'ce292f'
		_:
			return '28282d' # Black

func mix_colours(colour1: int, colour2: int):
	print('Mixing ' + str(colour1) + ' and ' + str(colour2))
	#print('Mixing ' + colour1.to_html(false) + ' and ' + colour2.to_html(false))
	var arr = [colour1, colour2]
	arr.sort()
	print(arr)
	match arr:
		[SHAPE_COLOURS.TURQUOISE, SHAPE_COLOURS.TURQUOISE]:
			return SHAPE_COLOURS.BG_COLOUR
		[SHAPE_COLOURS.TURQUOISE, SHAPE_COLOURS.DEEP_RED]:
			return SHAPE_COLOURS.BLUE
		[SHAPE_COLOURS.TURQUOISE, SHAPE_COLOURS.PINK]:
			return SHAPE_COLOURS.ANSWER_RED
		[SHAPE_COLOURS.TURQUOISE, SHAPE_COLOURS.BLUE]:
			return SHAPE_COLOURS.GOLD
		[SHAPE_COLOURS.TURQUOISE, SHAPE_COLOURS.GOLD]:
			return SHAPE_COLOURS.ORANGE
		[SHAPE_COLOURS.TURQUOISE, SHAPE_COLOURS.ORANGE]:
			return SHAPE_COLOURS.DEEP_RED

		[SHAPE_COLOURS.DEEP_RED, SHAPE_COLOURS.DEEP_RED]:
			return SHAPE_COLOURS.BG_COLOUR
		[SHAPE_COLOURS.DEEP_RED, SHAPE_COLOURS.PINK]:
			return SHAPE_COLOURS.TURQUOISE
		[SHAPE_COLOURS.DEEP_RED, SHAPE_COLOURS.BLUE]:
			return SHAPE_COLOURS.ORANGE
		[SHAPE_COLOURS.DEEP_RED, SHAPE_COLOURS.GOLD]:
			return SHAPE_COLOURS.ANSWER_RED
		[SHAPE_COLOURS.DEEP_RED, SHAPE_COLOURS.ORANGE]:
			return SHAPE_COLOURS.PINK

		[SHAPE_COLOURS.PINK, SHAPE_COLOURS.PINK]:
			return SHAPE_COLOURS.BG_COLOUR
		[SHAPE_COLOURS.PINK, SHAPE_COLOURS.BLUE]:
			return SHAPE_COLOURS.DEEP_RED
		[SHAPE_COLOURS.PINK, SHAPE_COLOURS.GOLD]:
			return SHAPE_COLOURS.BLUE
		[SHAPE_COLOURS.PINK, SHAPE_COLOURS.ORANGE]:
			return SHAPE_COLOURS.GOLD

		[SHAPE_COLOURS.BLUE, SHAPE_COLOURS.BLUE]:
			return SHAPE_COLOURS.BG_COLOUR
		[SHAPE_COLOURS.BLUE, SHAPE_COLOURS.GOLD]:
			return SHAPE_COLOURS.PINK
		[SHAPE_COLOURS.BLUE, SHAPE_COLOURS.ORANGE]:
			return SHAPE_COLOURS.ANSWER_RED

		[SHAPE_COLOURS.GOLD, SHAPE_COLOURS.GOLD]:
			return SHAPE_COLOURS.BG_COLOUR
		[SHAPE_COLOURS.GOLD, SHAPE_COLOURS.ORANGE]:
			return SHAPE_COLOURS.TURQUOISE

		[SHAPE_COLOURS.ORANGE, SHAPE_COLOURS.ORANGE]:
			return SHAPE_COLOURS.BG_COLOUR

		_:
			print('fallback')
			return SHAPE_COLOURS.BLACK

func get_rand_colour():
	return randi() % 7
